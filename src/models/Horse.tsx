/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 horse.glb --transform --types --out-dir ../src/models 
Files: horse.glb [83.25KB] > /Users/sacha/Developer/Hackathons/ConUHacks2025/conuhacks-2025/public/horse-transformed.glb [6.7KB] (92%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RigidBody } from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    horse: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/horse-transformed.glb") as GLTFResult;
  return (
    <RigidBody colliders="trimesh" lockRotations={true} scale={1.8} type="fixed">
      <group {...props} dispose={null}>
        <mesh geometry={nodes.horse.geometry} material={materials.PaletteMaterial001} />
      </group>
    </RigidBody>
  );
}

useGLTF.preload("/horse-transformed.glb");
