/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 wario.glb --transform --types --out-dir ../src/models 
Files: wario.glb [1.35MB] > C:\Users\carso\OneDrive\Documents\GitHub\conuhacks-2025\public\wario-transformed.glb [275.34KB] (80%)
Author: MichaelV (https://sketchfab.com/michaelvuong)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/lazy-effort-wario-model-572a9b146308415f963508575464a428
Title: Lazy Effort Wario model
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'mixamo.com'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    Object_13: THREE.SkinnedMesh
    Object_15: THREE.SkinnedMesh
    Object_16: THREE.SkinnedMesh
    Object_17: THREE.SkinnedMesh
    Object_19: THREE.SkinnedMesh
    Object_20: THREE.SkinnedMesh
    Object_22: THREE.SkinnedMesh
    Object_23: THREE.SkinnedMesh
    Object_24: THREE.SkinnedMesh
    Object_25: THREE.SkinnedMesh
    Object_26: THREE.SkinnedMesh
    Object_27: THREE.SkinnedMesh
    Object_28: THREE.SkinnedMesh
    Object_29: THREE.SkinnedMesh
    Object_30: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    Mat_0mat: THREE.MeshStandardMaterial
    Mat_1mat: THREE.MeshStandardMaterial
    Mat_2mat: THREE.MeshStandardMaterial
    Mat_3mat: THREE.MeshStandardMaterial
    Mat_4mat: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { scene, animations } = useGLTF('/models/wario-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)

  Object.values(materials).forEach((material) => {
    material.roughness = 0.4; 
    material.metalness = 0.2; 
  })

  React.useEffect(() => {
    if (actions['mixamo.com']) {
      actions['mixamo.com'].play() 
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes._rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_7.skeleton} scale={0.047} />
        <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_9.skeleton} scale={0.047} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials.Mat_1mat} skeleton={nodes.Object_11.skeleton} scale={0.047} />
        <skinnedMesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials.Mat_2mat} skeleton={nodes.Object_13.skeleton} scale={0.047} />
        <skinnedMesh name="Object_15" geometry={nodes.Object_15.geometry} material={materials.Mat_2mat} skeleton={nodes.Object_15.skeleton} scale={0.047} />
        <skinnedMesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials.Mat_1mat} skeleton={nodes.Object_16.skeleton} scale={0.047} />
        <skinnedMesh name="Object_17" geometry={nodes.Object_17.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_17.skeleton} scale={0.047} />
        <skinnedMesh name="Object_19" geometry={nodes.Object_19.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_19.skeleton} scale={0.047} />
        <skinnedMesh name="Object_20" geometry={nodes.Object_20.geometry} material={materials.Mat_1mat} skeleton={nodes.Object_20.skeleton} scale={0.047} />
        <skinnedMesh name="Object_22" geometry={nodes.Object_22.geometry} material={materials.Mat_1mat} skeleton={nodes.Object_22.skeleton} scale={0.047} />
        <skinnedMesh name="Object_23" geometry={nodes.Object_23.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_23.skeleton} scale={0.047} />
        <skinnedMesh name="Object_24" geometry={nodes.Object_24.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_24.skeleton} scale={0.047} />
        <skinnedMesh name="Object_25" geometry={nodes.Object_25.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_25.skeleton} scale={0.047} />
        <skinnedMesh name="Object_26" geometry={nodes.Object_26.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_26.skeleton} scale={0.047} />
        <skinnedMesh name="Object_27" geometry={nodes.Object_27.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_27.skeleton} scale={0.047} />
        <skinnedMesh name="Object_28" geometry={nodes.Object_28.geometry} material={materials.Mat_3mat} skeleton={nodes.Object_28.skeleton} scale={0.047} />
        <skinnedMesh name="Object_29" geometry={nodes.Object_29.geometry} material={materials.Mat_4mat} skeleton={nodes.Object_29.skeleton} scale={0.047} />
        <skinnedMesh name="Object_30" geometry={nodes.Object_30.geometry} material={materials.Mat_0mat} skeleton={nodes.Object_30.skeleton} scale={0.047} />
      </group>
    </group>
  )
}

useGLTF.preload('/wario-transformed.glb')
