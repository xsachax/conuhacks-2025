/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 garfield.glb --transform --types --out-dir ../src/models 
Files: garfield.glb [896.87KB] > C:\Users\carso\OneDrive\Documents\GitHub\conuhacks-2025\public\garfield-transformed.glb [299.5KB] (67%)
Author: arissya5 (https://sketchfab.com/arissya5)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/garfield-shuffling-b6d2080074444d1e86d2d5d071aef790
Title: Garfield Shuffling
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'
import { RigidBody } from '@react-three/rapier'

type ActionName = 'mixamo.com'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_6: THREE.SkinnedMesh
    Object_8: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    mesh0012matmat: THREE.MeshStandardMaterial
    mesh0019matmat: THREE.MeshStandardMaterial
    mesh0021matmat: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { scene, animations } = useGLTF('/models/garfield-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)


  Object.values(materials).forEach((material) => {
    material.roughness = 0.7; 
    material.metalness = 0.3; 
  })

  React.useEffect(() => {
    if (actions['mixamo.com']) {
      actions['mixamo.com'].play() 
    }
  }, [actions])

  return (
    <RigidBody colliders="trimesh" lockRotations={true} scale={2.5} type="fixed">
      <group ref={group} {...props} dispose={null}>
        <group name="Sketchfab_Scene">
          <primitive object={nodes._rootJoint} />
          <skinnedMesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.mesh0012matmat} skeleton={nodes.Object_6.skeleton} scale={0.01} />
          <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.mesh0019matmat} skeleton={nodes.Object_8.skeleton} scale={0.01} />
          <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.mesh0021matmat} skeleton={nodes.Object_9.skeleton} scale={0.01} />
        </group>
      </group>
    </RigidBody>
  )
}

useGLTF.preload('/garfield-transformed.glb')
