/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 bender.glb --transform --types --out-dir ../src/models 
Files: bender.glb [1.57MB] > C:\Users\carso\OneDrive\Documents\GitHub\conuhacks-2025\public\bender-transformed.glb [220.78KB] (86%)
Author: Jack M (https://sketchfab.com/Jack_Miles)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bender-108e843ee7bd4564ab29b98985705e0a
Title: BENDER
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'Idle'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    ['BENDER_HEAD_Material_#0_0']: THREE.Mesh
    ['BENDER_HEAD_03_-_Default_0']: THREE.Mesh
    ['BENDER_BODY_Material_#0_0']: THREE.Mesh
    ['BENDER_BODY_03_-_Default_0']: THREE.Mesh
    Object_7: THREE.SkinnedMesh
    Object_8: THREE.SkinnedMesh
    Object_10: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    Object_13: THREE.SkinnedMesh
    Object_14: THREE.SkinnedMesh
    Object_16: THREE.SkinnedMesh
    Object_17: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    Material_0: THREE.MeshStandardMaterial
    ['03_-_Default']: THREE.MeshStandardMaterial
    Material_0: THREE.MeshStandardMaterial
    ['03_-_Default']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { scene, animations } = useGLTF('/models/bender-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Object_4" scale={0.026}>
          <group name="IK_Chain001" position={[-18.583, 26.496, 0]} rotation={[-Math.PI / 2, 0, 0]} />
          <group name="IK_Chain002" position={[18.976, 26.22, 0]} rotation={[-Math.PI / 2, 0, 0]} />
        </group>
        <primitive object={nodes._rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.Material_0} skeleton={nodes.Object_7.skeleton} scale={0.026} />
        <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials['03_-_Default']} skeleton={nodes.Object_8.skeleton} scale={0.026} />
        <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials.Material_0} skeleton={nodes.Object_10.skeleton} scale={0.026} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials['03_-_Default']} skeleton={nodes.Object_11.skeleton} scale={0.026} />
        <skinnedMesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials.Material_0} skeleton={nodes.Object_13.skeleton} scale={0.026} />
        <skinnedMesh name="Object_14" geometry={nodes.Object_14.geometry} material={materials['03_-_Default']} skeleton={nodes.Object_14.skeleton} scale={0.026} />
        <skinnedMesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials.Material_0} skeleton={nodes.Object_16.skeleton} scale={0.026} />
        <skinnedMesh name="Object_17" geometry={nodes.Object_17.geometry} material={materials['03_-_Default']} skeleton={nodes.Object_17.skeleton} scale={0.026} />
      </group>
    </group>
  )
}

useGLTF.preload('/bender-transformed.glb')
