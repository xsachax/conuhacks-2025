/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 peter.glb --transform --types --out-dir ../src/models 
Files: peter.glb [541.48KB] > C:\Users\carso\OneDrive\Documents\GitHub\conuhacks-2025\public\peter-transformed.glb [134.43KB] (75%)
Author: FVTVFan2023 (https://sketchfab.com/FVTVFan2023)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/peter-griffin-rigged-fa2fe2a3bc284ce28c51172d99fbf216
Title: Peter Griffin (Rigged)
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'mixamo.com'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_6: THREE.SkinnedMesh
    Object_7: THREE.SkinnedMesh
    Object_8: THREE.SkinnedMesh
    Object_9: THREE.SkinnedMesh
    Object_10: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    peter_damagemat: THREE.MeshStandardMaterial
    peter_texturemat: THREE.MeshStandardMaterial
    peter_mouthmat: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { scene, animations } = useGLTF('/models/peter-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes._rootJoint} />
        <skinnedMesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.peter_damagemat} skeleton={nodes.Object_6.skeleton} scale={0.01} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.peter_texturemat} skeleton={nodes.Object_7.skeleton} scale={0.01} />
        <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.peter_damagemat} skeleton={nodes.Object_8.skeleton} scale={0.01} />
        <skinnedMesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials.peter_mouthmat} skeleton={nodes.Object_9.skeleton} scale={0.01} />
        <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials.peter_texturemat} skeleton={nodes.Object_10.skeleton} scale={0.01} />
      </group>
    </group>
  )
}

useGLTF.preload('/peter-transformed.glb')
